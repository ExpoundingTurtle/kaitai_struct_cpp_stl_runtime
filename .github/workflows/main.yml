name: Release Build

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)

jobs:
  linux:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        cpp-standard: ['11', '20']  # Drop C++98 for releases
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake
      - name: Build (Release)
        env:
          CPP_STANDARD: ${{ matrix.cpp-standard }}
          CMAKE_BUILD_TYPE: Release
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
            -DCMAKE_CXX_STANDARD="$CPP_STANDARD" \
            -DCMAKE_CXX_STANDARD_REQUIRED=ON \
            -DCMAKE_CXX_EXTENSIONS=OFF
          make -j$(nproc)
      - name: Package (Linux)
        run: |
          mkdir -p dist/linux-${{ matrix.cpp-standard }}
          cp -r build/bin build/lib include dist/linux-${{ matrix.cpp-standard }}/
          tar -czvf linux-cxx${{ matrix.cpp-standard }}.tar.gz -C dist/linux-${{ matrix.cpp-standard }} .
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-cxx${{ matrix.cpp-standard }}
          path: linux-cxx${{ matrix.cpp-standard }}.tar.gz

  macos:
    runs-on: macos-14
    strategy:
      matrix:
        cpp-standard: ['11', '20']
    steps:
      - uses: actions/checkout@v4
      - name: Build (Release)
        env:
          CPP_STANDARD: ${{ matrix.cpp-standard }}
          CMAKE_BUILD_TYPE: Release
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE="$CMAKE_BUILD_TYPE" \
            -DCMAKE_CXX_STANDARD="$CPP_STANDARD" \
            -DCMAKE_CXX_STANDARD_REQUIRED=ON \
            -DCMAKE_CXX_EXTENSIONS=OFF
          make -j$(sysctl -n hw.ncpu)
      - name: Package (macOS)
        run: |
          mkdir -p dist/macos-${{ matrix.cpp-standard }}
          cp -r build/bin build/lib include dist/macos-${{ matrix.cpp-standard }}/
          tar -czvf macos-cxx${{ matrix.cpp-standard }}.tar.gz -C dist/macos-${{ matrix.cpp-standard }} .
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-cxx${{ matrix.cpp-standard }}
          path: macos-cxx${{ matrix.cpp-standard }}.tar.gz

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          & "C:\vcpkg\bootstrap-vcpkg.bat"
          & "C:\vcpkg\vcpkg" install gtest:x64-windows zlib:x64-windows
      - name: Build (Release)
        run: |
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=11 \
            -DCMAKE_CXX_STANDARD_REQUIRED=ON \
            -DCMAKE_CXX_EXTENSIONS=OFF \
            -G "Visual Studio 17 2022" -A x64
          cmake --build . --config Release
      - name: Package (Windows)
        run: |
          mkdir dist\windows
          copy build\Release\*.exe dist\windows\
          copy build\Release\*.dll dist\windows\
          copy build\Release\*.lib dist\windows\
          Compress-Archive -Path dist\windows\* -DestinationPath windows-release.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: windows-release.zip

  # Optional: Add FreeBSD/NetBSD if needed
